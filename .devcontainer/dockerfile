# FROM mcr.microsoft.com/devcontainers/rust:0-1-bullseye
FROM debian:trixie-slim
ENV DEBIAN_FRONTEND=noninteractive
ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

# Arguments
ARG CONTAINER_USER=leptos
ARG CONTAINER_GROUP=leptos
ARG GITHUB_TOKEN

# update system
RUN apt-get update && \
	apt-get install -y nano git curl mold gcc lldb clang ninja-build libudev-dev unzip xz-utils \
	python3 python3-pip python3-venv libusb-1.0-0 libssl-dev pkg-config

# cleanup
RUN apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/library-scripts

# Set users
RUN adduser --disabled-password --gecos "" ${CONTAINER_USER}
USER ${CONTAINER_USER}
WORKDIR /home/${CONTAINER_USER}

# install rustup
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# setup mold linker
RUN echo "[target.x86_64-unknown-linux-gnu]\nlinker = \"clang\"\nrustflags = [\"-C\", \"link-arg=-fuse-ld=mold\"]\n\n" > /home/${CONTAINER_USER}/.cargo/config.toml

# Update envs
ENV PATH=${PATH}:/home/${CONTAINER_USER}/.cargo/bin

# Add sccache to cargo
# RUN cargo install sccache --locked && \
# 	echo "[build]\nrustc-wrapper = \"sccache\"\n\n" > /home/${CONTAINER_USER}/.cargo/config.toml

# Install extra crates
RUN rustup component add clippy rustfmt && \
	cargo install bacon cargo-audit cargo-info

# export github token
RUN if [ -n "${GITHUB_TOKEN}" ]; then export GITHUB_TOKEN=${GITHUB_TOKEN}; fi

# run bash
CMD [ "/bin/bash" ]
